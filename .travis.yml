language: rust
cache: cargo
matrix:
  include:
    # Stable channel.
    - os: linux
      rust: stable
      env: TARGET=x86_64-unknown-linux-gnu
    - os: osx
      rust: stable
      env: TARGET=x86_64-apple-darwin
    - os: windows
      rust: stable
      env: TARGET=x86_64-pc-windows-msvc

    # Minimum Rust supported channel.
    - os: linux
      rust: 1.34.0
      env: TARGET=x86_64-unknown-linux-gnu


addons:
  apt:
    packages:
      # needed to build deb packages
      - fakeroot

env:
  global:
    # Default target on travis-ci.
    # Used as conditional check in the install stage
    - HOST=x86_64-unknown-linux-gnu
    # Used on the deployment script
    - PROJECT_NAME=aws-utils

install:
  # prevent target re-add error from rustup
  - if [[ $TRAVIS_OS_NAME = linux && $HOST != $TARGET ]]; then rustup target add $TARGET; fi

script:
  # Incorporate TARGET env var to the build and test process
  - cargo build --target $TARGET --verbose
  - cargo test --target $TARGET --verbose

before_deploy:
  - bash ci/before_deploy.bash

deploy:
  provider: releases
  # NOTE updating the `api_key.secure`
  # - go to: https://github.com/settings/tokens/new
  # - generate new token using `public_repo` scope
  # - encrypt it using: `travis encrypt API_KEY_HERE`
  # - paste the output below
  api_key:
    secure: "eJWZ+5CmY0ayCueTWwpEOp7magG+OTb/5XaNCTFclXAooodLK8Mc30xM/ry6mqDQMw9sSHwHGscoCxbVTyY6mk8GThdSz2DHPz4628aH9axyfSHPcvPRMU+7yhZ0fzBe8koVrO1+mUx7Z3HLLhyD5VFMnuH0ZIw0t1WUcJ02PugmSk1pMj7+Q0imIevndGm1yN9KYPgYwTQV9BSzIk3c5YURHqODdx0B0mdfL/r5FoRNr7Za5iUfwqe07UcZ7d9e522QBvXgACaHbnOjkaR4eRRwtyeapHKJV4B5SQY2NjVgWXzuytxMiqHuEW3b9zFKPWqm9iY95BieMFTtKnf4yVl4u5+ij3Ku7sbTrBVLn6f2DVwVzfvpx8V7+rY+BPNQRkf8VRoPOkCSh65XECnmlukU8uNEbSIv6LOemu2DlDHNmJaWNfzkQkKAaSV0uIz86SQ/HAuUfAYQpGcD08RODRkYJMoqZcMhXfbLF8bBSwTgCj8tsGzvikCtGRAXhvNQ/RQeqOIUsEMzzkKbV2OiTnyrO4ery47V/bmPfEStPqzRr4de3nw9Fr1SUrsnaEaAqE31l5bxXWYhGMlIoCpEb6SIDE4F5xWeGNyA7HvK5cHvXIO6f5GasnNHD30bQBMnWad/jWmSE6gzmsER8jLzPIv3E5v7ne0o574lTkmCAnM="
  # for uploading multiple files
  file_glob: true
  # NOTE explanation on each env variable
  # - PROJECT_NAME: name of the project, set on the `env.global` above
  # - TRAVIS_TAG: tag name that the build is being deployed for, usually the version number
  # - TARGET: target triple of the build
  file:
    - $PROJECT_NAME-$TRAVIS_TAG-$TARGET.*
    - $PROJECT_NAME*.deb
  # don't delete artifacts from previous stage
  skip_cleanup: true
  on:
    # deploy only if we push a tag
    tags: true
    # deploy only on stable channel that has TARGET env variable sets
    condition: $TRAVIS_RUST_VERSION = stable && $TARGET != "x86_64-pc-windows-msvc"

notifications:
  email:
    on_success: never
